{"version":3,"sources":["components/AllExpenses/ExpenseDate.jsx","components/AllExpenses/ExpenseTitle.jsx","components/AllExpenses/ExpensePrice.jsx","components/AllExpenses/ExpenseItem.jsx","components/AllExpenses/ExpenseFilter.jsx","components/AllExpenses/ChartBar.jsx","components/AllExpenses/Chart.jsx","components/AllExpenses/ExpensesChart.jsx","components/AllExpenses/Expenses.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.js","reportWebVitals.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleDateString","year","day","className","ExpenseTitle","title","ExpensePrice","price","ExpenseItem","expenses","ExpenseFilter","value","expenseyear","onChange","event","expensef","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","ExpensesChart","expense","getMonth","Expenses","useState","changeyear","filter","getFullYear","toString","numItems","length","y","ExpenseForm","changeTitle","amount","changeAmount","changeDate","onSubmit","preventDefault","formdata","Date","onExpenseSubmit","type","min","onClick","active","NewExpense","isActivated","changeActive","changeActivation","prev","curr","expensedata","edata","id","random","onExpense","DUMMY_DATA","App","addExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62da0ae6.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props){\r\n    const month=props.date.toLocaleDateString(\"en-US\",{month: \"long\"});\r\n    const year=props.date.toLocaleDateString(\"en-US\",{year: \"numeric\"});\r\n    const day=props.date.toLocaleDateString(\"en-US\",{day: \"numeric\"});\r\n    return (\r\n        <div className=\"expensedate\">\r\n            <div>{month}</div>\r\n            <div>{year}</div>\r\n            <div>{day}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","function ExpenseTitle(props){\r\n    return (\r\n        <div>\r\n            <h1>{props.title}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseTitle;","import \"./ExpensePrice.css\";\r\n\r\nfunction ExpensePrice(props){\r\n    // console.log(props);\r\n    return (\r\n        <div className=\"price\">\r\n            <p>Rs {props.price}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpensePrice;","import ExpenseDate from \"./ExpenseDate\";\r\nimport ExpenseTitle from \"./ExpenseTitle\";\r\nimport ExpensePrice from \"./ExpensePrice\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props){\r\n    let date=props.expenses.date;\r\n    let title=props.expenses.title;\r\n    let price=props.expenses.price;\r\n    return (\r\n        <div className=\"expenseitem\">\r\n            <ExpenseDate date={date}/>\r\n            <ExpenseTitle title={title}/>\r\n            <ExpensePrice price={price}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import \"./ExpenseFilter.css\";\r\n\r\nfunction ExpenseFilter(props){\r\n    // const [year,changeYear]=useState(\"select\");\r\n\r\n    const yearHandler=(event)=>{\r\n        props.expensef(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"expensefilter\">\r\n            <label>Filter by year-</label>\r\n            <select value={props.expenseyear} onChange={yearHandler}>\r\n                <option value=\"select\">select</option>\r\n                <option value=\"2019\">2019</option>\r\n                <option value=\"2020\">2020</option>\r\n                <option value=\"2021\">2021</option>\r\n                <option value=\"2022\">2022</option>\r\n                <option value=\"2023\">2023</option>\r\n                <option value=\"2024\">2024</option>\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseFilter;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import Chart from \"./Chart.jsx\";\r\n\r\nconst ExpensesChart=(props)=>{\r\n\r\n    const dataPoints=[\r\n        {\r\n            label: \"Jan\",\r\n            value: 0\r\n        },\r\n        {\r\n            label: \"Feb\",\r\n            value: 0\r\n        },\r\n        {\r\n            label: \"Mar\",\r\n            value: 0\r\n        },\r\n        {\r\n            label: \"Apr\",\r\n            value: 0\r\n        },\r\n        {\r\n            label: \"May\",\r\n            value: 0\r\n        },\r\n        {\r\n            label: \"Jun\",\r\n            value: 0\r\n        },\r\n        {\r\n            label: \"Jul\",\r\n            value: 0\r\n        },\r\n        {\r\n            label: \"Aug\",\r\n            value: 0\r\n        },\r\n        {\r\n            label: \"Sep\",\r\n            value: 0\r\n        },\r\n        {\r\n            label: \"Oct\",\r\n            value: 0\r\n        },\r\n        {\r\n            label: \"Nov\",\r\n            value: 0\r\n        },\r\n        {\r\n            label: \"Dec\",\r\n            value: 0\r\n        },\r\n    ];\r\n\r\n    for(let expense of props.expenses){\r\n        let expensemonth=expense.date.getMonth();\r\n        dataPoints[expensemonth].value+=+expense.price;\r\n    }\r\n\r\n    return (\r\n        <Chart dataPoints={dataPoints}/>\r\n    );\r\n}\r\n\r\nexport default ExpensesChart;","import { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\nfunction Expenses(props){\r\n    const [year,changeyear]=useState(\"2020\");\r\n    const expensef=(y)=>{\r\n        changeyear(y);\r\n    }\r\n\r\n    let expenses=props.expenses.filter((expense)=>{\r\n        return expense.date.getFullYear().toString()===year;\r\n    })\r\n\r\n    let numItems=<p>No Item is present still. Add from ☝</p>\r\n    if(expenses.length>0){\r\n        numItems=expenses.map((expense)=>{\r\n            return <ExpenseItem expenses={expense}/>;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"expenses\">\r\n            <ExpensesChart expenses={expenses}/>\r\n            <ExpenseFilter expenseyear={year} expensef={expensef}/>\r\n            {numItems}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Expenses;","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm=(props)=>{\r\n    const [title,changeTitle]=useState(\"\");\r\n    const [amount,changeAmount]=useState(\"\");\r\n    const [date,changeDate]=useState(\"\");\r\n\r\n    const titlechange=(event)=>{\r\n        changeTitle(event.target.value);\r\n    }\r\n    const amountchange=(event)=>{\r\n        changeAmount(event.target.value);\r\n    }\r\n    const datechange=(event)=>{\r\n        changeDate(event.target.value);\r\n    }\r\n\r\n    const submitHandler=(event)=>{\r\n        event.preventDefault();\r\n        const formdata={\r\n            title: title,\r\n            price: amount,\r\n            date: new Date(date)\r\n        };\r\n        changeTitle(\"\");\r\n        changeAmount(\"\");\r\n        changeDate(\"\");\r\n        props.onExpenseSubmit(formdata);\r\n    }\r\n\r\n    const changeActive=()=>{\r\n        props.active();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"formcontainer\">\r\n                <div className=\"inputfields\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={title} onChange={titlechange}/>\r\n                </div>\r\n                <div>\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" min=\"1\" max=\"100000\" value={amount} onChange={amountchange}/>\r\n                </div>\r\n                <div>\r\n                    <label>Date</label>\r\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2024-01-01\" value={date} onChange={datechange}/>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn\" onClick={changeActive}>Cancel</button>\r\n                <button className=\"btn\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;","import { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\"\r\nconst NewExpense=(props)=>{\r\n    const [isActivated,changeActive]=useState(false);\r\n\r\n    const expensedat=(expensedata)=>{\r\n        const edata={\r\n            ...expensedata,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onExpense(edata);\r\n    } \r\n\r\n    const changeActivation=()=>{\r\n        changeActive((prev)=>{\r\n          return !prev;\r\n        })\r\n    }\r\n\r\n    let curr=<button className=\"btn\" onClick={changeActivation}>ADD EXPENSE💸</button>;\r\n\r\n    if(isActivated===true){\r\n        curr=<ExpenseForm onExpenseSubmit={expensedat} active={changeActivation}/>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"newex\">\r\n            {curr}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import { useState } from 'react';\nimport './App.css';\nimport Expenses from './components/AllExpenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\n{/*\n  (1)Only add expense button at first after tapping it whole newexpense comes on.\n  (2)Now Cancel button after it expands, after we click cancel button again gets small without submitting.\n*/}\n\nconst DUMMY_DATA=[\n  {\n      id: 1,\n      title: \"Toilet Paper\",\n      date: new Date(2021,10,12),\n      price: \"500\"\n  },\n  {\n      id: 2,\n      title: \"Laptop\",\n      date: new Date(2021,10,13),\n      price: \"50000\"\n  },\n  {\n      id: 3,\n      title: \"Keyboard\",\n      date: new Date(2021,10,14),\n      price: \"1000\"\n  }\n];\n\nfunction App() {\n  const [expenses,addExpenses]=useState(DUMMY_DATA);\n\n  const expensehandler=(expensedata)=>{\n    addExpenses((prevExpenses)=>{\n      return [expensedata,...prevExpenses];\n    });\n  }\n\n  return (\n    <div>\n      <NewExpense onExpense={expensehandler}/>\n      <Expenses expenses={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}